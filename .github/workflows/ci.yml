name: CI/CD

on:
  push:
    branches:
      - '**'  # This will run on all branches
    tags:
      - '[0-9]*.[0-9]*.[0-9]*'          # Stable versions (1.0.3)
      - '[0-9]*.[0-9]*.[0-9]*.dev[0-9]*' # Dev versions (1.0.3.dev0)
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: tox

  publish-testpypi:
    needs: [test]
    # Only publish to TestPyPI on dev tags
    if: startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, '.dev0')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build and publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          echo "Building version: $(python setup.py --version)"
          python -m build
          twine check dist/*
          echo "Publishing version: $(python setup.py --version) to TestPyPI"
          python -m twine upload --verbose --repository testpypi dist/*

  publish-pypi:
    needs: [test]
    # Only publish to PyPI on stable version tags
    if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '.dev')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build and publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "Building version: $(python setup.py --version)"
          python -m build
          twine check dist/*
          echo "Publishing version: $(python setup.py --version) to PyPI"
          python -m twine upload --verbose dist/*